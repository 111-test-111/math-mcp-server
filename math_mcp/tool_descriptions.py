# -*- coding: utf-8 -*-
"""
工具描述配置文件 - 统一格式
同时支持FastMCP和描述加载器，包含详细的参数说明
"""

TOOL_DESCRIPTIONS = {
    # 几何计算工具
    "geometry_calculator": {
        "name": "geometry_calculator",
        "description": "强大的几何计算工具，支持平面几何、立体几何和解析几何计算",
        "args": {
            "shape_type": "(string) 几何形状类型。必需。支持：'circle', 'triangle', 'rectangle', 'polygon', 'ellipse', 'parallelogram', 'trapezoid', 'rhombus', 'regular_polygon', 'sphere', 'cube', 'cylinder', 'cone', 'pyramid', 'prism', 'torus', 'ellipsoid', 'analytical'",
            "operation": "(string) 要执行的几何运算。必需。支持：'area', 'volume', 'surface_area', 'circumference', 'perimeter', 'properties', 'diagonal', 'distance', 'midpoint', 'slope', 'line_equation', 'angle', 'centroid', 'incircle', 'circumcircle'",
            "dimensions": "(dict, 可选) 几何体的尺寸参数字典。例如：{'radius': 5}, {'length': 10, 'width': 5}。键必须是字符串，值必须是正数。",
            "points": "(list[list[float]], 可选) 坐标点列表，用于基于坐标的计算。格式为 [[x1,y1], [x2,y2], ...] 或 [[x1,y1,z1], [x2,y2,z2], ...]",
            "precision": "(int, 可选) 计算结果的小数位数，范围 0-15。",
            "unit": "(string, 可选) 计量单位标识，例如 'cm', 'm'。默认为 'default'。",
        },
        "returns": "包含计算结果的字典，根据操作类型返回相应的几何属性值",
        "examples": [
            "geometry_calculator(shape_type='circle', operation='properties', dimensions={'radius': 5})",
            "geometry_calculator(shape_type='triangle', operation='area', points=[[0,0], [3,0], [0,4]])",
        ],
    },
    # 数论计算工具
    "number_theory_calculator": {
        "name": "number_theory_calculator",
        "description": "高级数论计算工具，支持素数检测、因数分解、模运算等",
        "args": {
            "operation": "(string) 数论运算类型。必需。支持：'prime_factorization', 'prime_test', 'generate_primes', 'modular_arithmetic', 'modular_exponentiation', 'extended_gcd', 'chinese_remainder', 'euler_totient', 'divisors', 'perfect_number', 'fibonacci', 'collatz', 'carmichael_function', 'jacobi_symbol', 'quadratic_residue', 'primitive_root', 'continued_fraction'",
            "number": "(int, 可选) 主要操作数。大多数单数字操作需要此参数，必须为正整数。",
            "numbers": "(list[int], 可选) 数字列表。用于需要多个数字的操作，如 'chinese_remainder' 或 'jacobi_symbol'。",
            "modulus": "(int, 可选) 模数。用于模运算，必须为正整数。",
            "base": "(int, 可选) 底数。用于 'modular_exponentiation'。",
            "exponent": "(int, 可选) 指数。用于 'modular_exponentiation'，必须为非负整数。",
            "limit": "(int, 可选) 限制值。用于 'generate_primes' 或 'fibonacci'，必须为正整数。",
            "precision": "(int, 可选) 连分数展开的项数。范围 1-50，默认 10。",
        },
        "returns": "包含数论计算结果的字典",
        "examples": [
            "number_theory_calculator(operation='prime_factorization', number=60)",
            "number_theory_calculator(operation='prime_test', number=97)",
        ],
    },
    # 信号处理工具
    "signal_processing_calculator": {
        "name": "signal_processing_calculator",
        "description": "专业的数字信号处理工具，支持FFT、滤波、调制解调等。重要特性：①所有大量数据自动保存到TMPFILE_PATH文件夹，仅返回摘要信息和data_file路径；②支持链式分析：FFT结果文件可直接用于后续spectral_analysis；③推荐使用signal_file参数避免大量数据传输。",
        "args": {
            "operation": "(string) 信号处理操作类型。必需。支持：'fft'(快速傅里叶变换), 'generate_signal'(信号生成), 'filter'(滤波), 'windowing'(加窗), 'autocorrelation'(自相关), 'crosscorrelation'(互相关), 'spectral_analysis'(频谱分析), 'signal_metrics'(信号度量), 'convolution'(卷积), 'deconvolution'(反卷积), 'envelope_detection'(包络检测), 'phase_analysis'(相位分析), 'noise_reduction'(降噪), 'resampling'(重采样), 'modulation'(调制), 'demodulation'(解调)",
            "signal": "(list[float], 可选) 输入信号数据。与signal_file二选一。仅推荐用于小数据量（<1000点），大数据请使用signal_file。",
            "signal_file": "(string, 可选) 信号文件路径 (.json格式)。与signal二选一。支持原始信号文件、FFT结果文件、spectral_analysis文件等。强烈推荐用于大数据处理和链式分析。路径示例：'C:\\Users\\X\\Desktop\\test\\signal_xxx.json'",
            "sampling_rate": "(float, 可选) 采样率 (Hz)。必须为正数。示例：1000.0。若signal_file包含采样率信息，此参数可省略。",
            "frequency": "(float, 可选) 信号频率 (Hz)。用于信号生成、调制解调。必须为正数。",
            "filter_type": "(string, 可选) 滤波器类型。支持：'lowpass', 'highpass', 'bandpass', 'moving_average', 'median', 'gaussian', 'savitzky_golay', 'wiener'。",
            "cutoff_freq": "(float, 可选) 截止频率 (Hz)。用于滤波，必须小于奈奎斯特频率 (sampling_rate/2)。",
            "window_size": "(int, 可选) 窗口大小。用于加窗、谱分析、降噪。范围：3-10000。",
            "overlap": "(float, 可选) 窗口重叠比例。用于谱分析（如STFT），范围0-1。默认为0.5。",
            "order": "(int, 可选) 滤波器阶数或多项式阶数。范围：1-20。",
            "duration": "(float, 可选) 信号持续时间 (秒)。用于信号生成，必须为正数。",
            "signal_type": "(string, 可选) 信号类型。用于generate_signal操作。支持：'sine'(正弦), 'cosine'(余弦), 'square'(方波), 'sawtooth'(锯齿波), 'triangle'(三角波), 'chirp'(线性调频), 'white_noise'(白噪声), 'pink_noise'(粉红噪声), 'brown_noise'(棕色噪声), 'gaussian_noise'(高斯噪声), 'uniform_noise'(均匀噪声), 'impulse'(冲激), 'step'(阶跃), 'exponential'(指数衰减), 'dc'(直流)。",
            "noise_level": "(float, 可选) 噪声幅度或信号幅度。用于噪声信号和某些特殊信号，默认1.0。",
            "output_filename": "(string, 可选) 输出文件名（不含路径）。提供此参数时会自动拼接TMPFILE_PATH保存信号数据，若同名文件已存在则自动加上时间戳避免覆盖。",
        },
        "returns": "包含处理结果摘要的字典。关键字段：①data_file：完整数据文件路径（位于TMPFILE_PATH），可用于后续分析；②operation：操作类型；③message：处理状态说明；④特定摘要信息（如dominant_frequency、spectral_features、autocorr_properties、envelope_stats等）。注意：所有大量数据（frequencies、signal、magnitude等）已保存到文件，不再直接返回。",
        "examples": [
            "# 工作流示例1：各种信号生成",
            "signal_processing_calculator(operation='generate_signal', signal_type='sine', frequency=50, sampling_rate=1000, duration=1.0)",
            "signal_processing_calculator(operation='generate_signal', signal_type='white_noise', sampling_rate=1000, duration=2.0, noise_level=0.5)",
            "signal_processing_calculator(operation='generate_signal', signal_type='square', frequency=10, sampling_rate=500, duration=1.0)",
            "signal_processing_calculator(operation='generate_signal', signal_type='chirp', frequency=20, sampling_rate=1000, duration=2.0)",
            "# 工作流示例2：信号生成→FFT→频谱分析",
            "result1 = signal_processing_calculator(operation='generate_signal', signal_type='pink_noise', sampling_rate=1000, duration=1.0, noise_level=1.0)",
            "result2 = signal_processing_calculator(operation='fft', signal_file=result1['data_file'])",
            "result3 = signal_processing_calculator(operation='spectral_analysis', signal_file=result2['data_file'])",
            "# 工作流示例3：相关性分析",
            "signal_processing_calculator(operation='autocorrelation', signal_file='path/to/signal.json')  # 返回摘要和data_file",
            "signal_processing_calculator(operation='crosscorrelation', signal=[sig1+sig2])  # 自动分割为两个信号",
            "# 工作流示例4：滤波和降噪",
            "signal_processing_calculator(operation='filter', signal_file='noisy_signal.json', filter_type='lowpass', cutoff_freq=100, sampling_rate=1000)",
            "signal_processing_calculator(operation='noise_reduction', signal_file='signal.json', filter_type='median', window_size=7)",
            "# 工作流示例5：调制解调",
            "result_mod = signal_processing_calculator(operation='modulation', signal=[...], frequency=100, sampling_rate=1000)",
            "signal_processing_calculator(operation='demodulation', signal_file=result_mod['data_file'], frequency=100, sampling_rate=1000)",
            "# 特殊信号生成",
            "signal_processing_calculator(operation='generate_signal', signal_type='impulse', sampling_rate=1000, duration=0.1)",
            "signal_processing_calculator(operation='generate_signal', signal_type='exponential', frequency=2.0, sampling_rate=100, duration=5.0)",
        ],
    },
    # 金融数学工具
    "financial_calculator": {
        "name": "financial_calculator",
        "description": "专业的金融数学计算工具，支持复利、投资分析、风险评估等",
        "args": {
            "operation": "(string) 金融计算操作类型。必需。支持：'compound_interest', 'simple_interest', 'present_value', 'future_value', 'annuity', 'npv', 'irr', 'loan_payment', 'bond_pricing', 'portfolio_metrics', 'volatility', 'sharpe_ratio'",
            "principal": "(float, 可选) 本金或初始投资额。必须为正数。",
            "rate": "(float, 可选) 每期利率（小数）。期利率，如月利率。与 annual_rate 二选一。",
            "time": "(int, 可选) 时间周期（年或期数）。必须为非负整数。",
            "cash_flows": "(list[float], 可选) 现金流序列。用于 'npv'/'irr' 计算。第一个元素通常是负的初始投资。",
            "initial_investment": "(float, 可选) 初始投资额，用于NPV/IRR等。",
            "payment": "(float, 可选) 定期付款金额。用于 'annuity', 'loan_payment'。",
            "periods": "(int, 可选) 付款期数。必须为正整数。",
            "future_value": "(float, 可选) 未来价值。",
            "present_value": "(float, 可选) 当前价值。",
            "annual_rate": "(float, 可选) 年化利率（小数）。若提供，则贷款计算时将除以 payments_per_year 得到期利率。",
            "payments_per_year": "(int, 可选) 每年支付次数。默认为12（按月）。",
            "returns": "(list[float], 可选) 收益率序列（小数形式）。用于投资组合分析。",
            "prices": "(list[float], 可选) 价格序列。用于波动率计算。",
            "risk_free_rate": "(float, 可选) 无风险利率（小数形式）。用于夏普比率计算。",
        },
        "returns": "包含金融计算结果的字典",
        "examples": [
            "financial_calculator(operation='compound_interest', principal=1000, rate=0.05, time=10)",
            "financial_calculator(operation='npv', cash_flows=[-1000,300,400,500,600], rate=0.1)",
            "financial_calculator(operation='loan_payment', principal=100000, annual_rate=0.05, periods=360)",
        ],
    },
    # 概率统计工具
    "probability_calculator": {
        "name": "probability_calculator",
        "description": "专业的概率统计计算工具，支持概率分布、假设检验、贝叶斯分析等",
        "args": {
            "operation": "(string) 概率统计操作类型。必需。支持：'probability_mass', 'cumulative_distribution', 'inverse_cdf', 'random_sampling', 'distribution_stats', 'bayes_theorem', 'combinatorics', 'hypothesis_test', 'confidence_interval', 'monte_carlo'",
            "distribution": "(string, 可选) 概率分布类型。支持：'normal', 'binomial', 'poisson', 'exponential', 'uniform', 'chi_square', 't_distribution'。",
            "parameters": "(dict, 可选) 分布参数字典。正态分布支持：{'mu': 0, 'sigma': 1} 或 {'mean': 0, 'std': 1}，二项分布：{'n': 10, 'p': 0.5}。键必须是字符串，值是数值。",
            "x_value": "(float, 可选) 计算概率或分位数的单个自变量值。",
            "x_values": "(list[float], 可选) 计算概率或分位数的多个自变量值列表。",
            "probability": "(float, 可选) 概率值。范围 0-1，用于 'inverse_cdf'。",
            "n_samples": "(int, 可选) 随机抽样样本数。必须为正整数，最大 100000。",
            "events": "(list[dict], 可选) 事件列表。用于'bayes_theorem'，格式为[{'name': 'A', 'prob': 0.1}, ...]",
            "data": "(list[float], 可选) 样本数据。用于 'hypothesis_test', 'confidence_interval'。",
        },
        "returns": "包含概率统计计算结果的字典",
        "examples": [
            "probability_calculator(operation='probability_mass', distribution='normal', parameters={'mu':0,'sigma':1}, x_value=1.96)",
            "probability_calculator(operation='cumulative_distribution', distribution='normal', parameters={'mu':20,'sigma':3}, x_value=25)",
            "probability_calculator(operation='random_sampling', distribution='binomial', parameters={'n':10,'p':0.3}, n_samples=100)",
        ],
    },
    # 复分析工具
    "complex_analysis_suite": {
        "name": "complex_analysis_suite",
        "description": "强大的复分析和复变函数工具，支持复数形式转换、留数计算、解析延拓、复平面可视化等高级功能",
        "args": {
            "operation": "(string) 复分析操作类型。必需。支持：'convert_form'(复数形式转换), 'arithmetic'(复数运算), 'function_evaluation'(复函数求值), 'residue_calculation'(留数计算), 'contour_integration'(围道积分), 'series_expansion'(级数展开), 'analytic_continuation'(解析延拓), 'complex_plot'(复函数绘图), 'conformal_mapping'(保形映射), 'singularity_analysis'(奇点分析, 强于复函数绘图的奇点分析)",
            "complex_number": "(string|complex, 可选) 单个复数。支持字符串形式如'3+4i'或复数对象。用于形式转换、函数求值等。",
            "complex_numbers": "(list[string|complex], 可选) 复数列表。用于复数运算，至少需要2个复数。",
            "function_expression": "(string, 可选) 复函数表达式。如'z**2 + 1', 'exp(z)', 'sin(z)/z'等。支持sympy语法。",
            "variable": "(string, 可选) 复变量名。默认为'z'。",
            "contour_points": "(list[list[float]], 可选) 围道积分路径点。格式为[[x1,y1], [x2,y2], ...]，定义复平面上的积分路径。",
            "singularities": "(list[string|complex], 可选) 奇点列表。用于留数计算，如['0', '1+2i', '-1']。",
            "center": "(string|complex, 可选) 级数展开中心或解析延拓中心。默认为0。",
            "radius": "(float, 可选) 收敛半径或延拓半径。用于解析延拓分析。",
            "order": "(int, 可选) 极点阶数或级数项数。用于留数计算或级数展开。",
            "x_range": "(tuple[float, float], 可选) 复平面实轴范围。默认(-5, 5)。用于绘图和分析。",
            "y_range": "(tuple[float, float], 可选) 复平面虚轴范围。默认(-5, 5)。用于绘图和分析。",
            "resolution": "(int, 可选) 绘图分辨率。默认500。影响图像质量和计算时间。",
            "colormap": "(string, 可选) 颜色映射。默认'hsv'。支持matplotlib颜色映射。",
            "filename": "(string, 可选) 保存文件名。不含路径，自动保存到临时目录。",
            "plot_type": "(string, 可选) 绘图类型。支持'domain_coloring'(域着色), 'all'(全部图形)。默认'domain_coloring'。",
            "series_terms": "(int, 可选) 级数展开项数。默认10。",
            "branch_cut": "(string, 可选) 分支切割描述。用于多值函数的解析延拓。",
            "method": "(string, 可选) 计算方法。默认'auto'。支持'all'(全部运算), 'add', 'multiply'等。",
        },
        "returns": "包含复分析计算结果的字典。根据操作类型返回相应结果：形式转换返回各种复数表示，留数计算返回留数值和围道积分，绘图返回文件路径和分析信息等",
        "examples": [
            "complex_analysis_suite(operation='convert_form', complex_number='3+4i')",
            "complex_analysis_suite(operation='arithmetic', complex_numbers=['1+2i', '3-4i'], method='all')",
            "complex_analysis_suite(operation='function_evaluation', function_expression='z**2 + 1', complex_number='1+i')",
            "complex_analysis_suite(operation='residue_calculation', function_expression='1/(z**2 + 1)', singularities=['i', '-i'])",
            "complex_analysis_suite(operation='complex_plot', function_expression='z**2', x_range=(-2, 2), y_range=(-2, 2))",
            "complex_analysis_suite(operation='series_expansion', function_expression='exp(z)', center='0', series_terms=8)",
            "complex_analysis_suite(operation='conformal_mapping', function_expression='z**2', x_range=(-1, 1), y_range=(-1, 1))",
        ],
    },
    # 图论工具
    "graph_theory_suite": {
        "name": "graph_theory_suite",
        "description": "专业的图论分析工具，支持最短路径、最大流、连通性分析、中心性计算、社区检测、图谱分析等完整图论功能",
        "args": {
            "operation": "(string) 图论操作类型。必需。支持：'shortest_path'(最短路径), 'all_pairs_shortest_path'(全对最短路径), 'maximum_flow'(最大流), 'connectivity_analysis'(连通性分析), 'centrality_analysis'(中心性分析), 'community_detection'(社区检测), 'spectral_analysis'(图谱分析), 'graph_properties'(图属性), 'minimum_spanning_tree'(最小生成树), 'graph_coloring'(图着色), 'clique_analysis'(团分析), 'graph_visualization'(图可视化), 'graph_comparison'(图比较), 'graph_generation'(特殊图生成)",
            "graph_data": "(dict, 可选) 图数据字典。格式：{'nodes': [节点列表], 'edges': [边列表]}。边可以是简单列表或包含属性的字典列表。",
            "adjacency_matrix": "(list[list[int|float]], 可选) 邻接矩阵。方阵，元素表示节点间连接权重，0表示无连接。",
            "edge_list": "(list[list[int|string]], 可选) 边列表。格式：[[源节点, 目标节点], ...] 或 [[源节点, 目标节点, 权重], ...]。",
            "node_list": "(list[int|string], 可选) 节点列表。用于指定节点标识符（如'[1,2,3]'）。",
            "source_node": "(int|string, 可选) 源节点。用于最短路径、最大流等算法。",
            "target_node": "(int|string, 可选) 目标节点。用于最短路径、最大流等算法。",
            "weight_attribute": "(string, 可选) 权重属性名。默认'weight'。用于加权图算法。",
            "directed": "(bool, 可选) 是否为有向图。默认False。",
            "algorithm": "(string, 可选) 算法选择。默认'auto'。支持：'dijkstra', 'bellman_ford', 'floyd_warshall', 'bfs', 'kruskal', 'prim', 'louvain', 'girvan_newman'等。",
            "k_value": "(int, 可选) K值参数。用于k-团分析、谱聚类等。",
            "threshold": "(float, 可选) 阈值参数。用于社区检测、图生成等。",
            "layout": "(string, 可选) 图布局算法。默认'spring'。支持：'spring', 'circular', 'random', 'shell', 'spectral', 'kamada_kawai'。",
            "filename": "(string, 可选) 保存文件名。用于图可视化输出。",
            "node_colors": "(list[string], 可选) 节点颜色列表。用于可视化。",
            "edge_colors": "(list[string], 可选) 边颜色列表。用于可视化。",
            "node_sizes": "(list[int], 可选) 节点大小列表。用于可视化。",
            "show_labels": "(bool, 可选) 是否显示节点标签。默认True。",
            "figsize": "(tuple[float, float], 可选) 图形大小。默认(10, 8)。",
        },
        "returns": "包含图论分析结果的字典。根据操作类型返回相应结果：路径分析返回路径和长度，中心性分析返回各种中心性指标，可视化返回图像文件路径等",
        "examples": [
            "graph_theory_suite(operation='shortest_path', edge_list=[[0,1,2], [1,2,3], [0,2,1]], source_node=0, target_node=2, algorithm='dijkstra')",
            "graph_theory_suite(operation='centrality_analysis', graph_data={'nodes': [0,1,2,3], 'edges': [[0,1], [1,2], [2,3], [3,0]]}, algorithm='all')",
            "graph_theory_suite(operation='community_detection', adjacency_matrix=[[0,1,1,0], [1,0,1,1], [1,1,0,1], [0,1,1,0]], algorithm='louvain')",
            "graph_theory_suite(operation='spectral_analysis', edge_list=[[0,1], [1,2], [2,0]], k_value=2)",
            "graph_theory_suite(operation='graph_visualization', graph_data={'nodes': ['A','B','C'], 'edges': [['A','B'], ['B','C']]}, layout='spring')",
            "graph_theory_suite(operation='maximum_flow', edge_list=[[0,1,10], [1,2,10], [0,2,1]], source_node=0, target_node=2, directed=True)",
            "graph_theory_suite(operation='graph_generation', algorithm='complete', k_value=5)",
        ],
    },
    # 基础算术工具
    "basic_arithmetic": {
        "name": "basic_arithmetic",
        "description": "基础算术运算工具，支持多数加减乘除和高精度计算",
        "args": {
            "operation": "(string) 算术运算类型。必需。支持：'add', 'subtract', 'multiply', 'product', 'divide', 'power', 'modulo', 'modulus', 'factorial', 'gcd', 'lcm', 'sum', 'average'。",
            "numbers": "(list[float]) 参与运算的数值列表。必需，至少包含一个数字。",
            "precision": "(int, 可选) 计算结果的小数位数。范围 0-15。",
            "use_decimal": "(bool, 可选) 是否使用高精度十进制计算。默认为 False。",
        },
        "returns": "包含运算结果的字典",
        "examples": [
            "basic_arithmetic(operation='add', numbers=[1, 2, 3, 4, 5])",
            "basic_arithmetic(operation='multiply', numbers=[2.5, 3.7], precision=3)",
        ],
    },
    # 数学函数工具
    "mathematical_functions": {
        "name": "mathematical_functions",
        "description": "数学函数计算工具，支持三角函数、对数、指数等",
        "args": {
            "function": "(string) 数学函数类型。必需。支持：'sin', 'cos', 'tan', 'asin', 'acos', 'atan', 'sinh', 'cosh', 'tanh', 'log', 'log10', 'ln', 'exp', 'sqrt', 'cbrt', 'abs', 'ceil', 'floor', 'round', 'factorial', 'gamma'。",
            "value": "(float) 函数输入值。必需。",
            "base": "(float, 可选) 对数底数。仅用于 'log' 函数，默认为 10。",
            "precision": "(int, 可选) 计算结果的小数位数。范围 0-15。",
            "angle_unit": "(string, 可选) 角度单位。用于三角函数，支持 'radians', 'degrees'。默认为 'radians'。",
        },
        "returns": "包含函数计算结果的字典",
        "examples": [
            "mathematical_functions(function='sin', value=1.57, angle_unit='radians')",
            "mathematical_functions(function='log', value=100, base=10)",
        ],
    },
    # 数字转换工具
    "number_converter": {
        "name": "number_converter",
        "description": "数字格式转换工具，支持进制转换、科学计数法等",
        "args": {
            "number": "(string) 要转换的数字（以字符串形式提供）。必需。",
            "from_base": "(int, 可选) 源进制。范围 2-36，默认为 10。",
            "to_base": "(int, 可选) 目标进制。范围 2-36，默认为 10。",
            "operation": "(string, 可选) 转换操作类型。支持：'convert'(进制转换), 'format'(格式化), 'scientific'(科学计数法), 'fraction'(分数形式)。默认为 'convert'。",
            "precision": "(int, 可选) 精度。用于科学/工程计数法的小数位数。",
        },
        "returns": "包含转换结果的字典",
        "examples": [
            "number_converter(number='255', from_base=10, to_base=16)",
            "number_converter(number='1010', from_base=2, to_base=10)",
        ],
    },
    # 单位转换工具
    "unit_converter": {
        "name": "unit_converter",
        "description": "物理单位转换工具，支持长度、重量、温度等单位转换",
        "args": {
            "value": "(float) 要转换的数值。必需。",
            "from_unit": "(string) 源单位。必需。",
            "to_unit": "(string) 目标单位。必需。",
            "unit_type": "(string) 单位类型。必需。支持：'length', 'weight', 'temperature', 'area', 'volume', 'time', 'speed', 'energy'。",
        },
        "returns": "包含转换结果的字典",
        "examples": [
            "unit_converter(value=100, from_unit='cm', to_unit='m', unit_type='length')",
            "unit_converter(value=32, from_unit='fahrenheit', to_unit='celsius', unit_type='temperature')",
        ],
    },
    # 高精度计算工具
    "precision_calculator": {
        "name": "precision_calculator",
        "description": "高精度数值计算工具，支持任意精度的算术运算",
        "args": {
            "numbers": "(list[float]) 参与计算的数值列表。必需。",
            "operation": "(string) 运算类型。必需。支持：'add', 'subtract', 'multiply', 'divide', 'power', 'sqrt', 'factorial'。",
            "precision_digits": "(int, 可选) 精度位数。默认为 10。",
            "rounding_mode": "(string, 可选) 舍入模式。支持：'round_half_up', 'round_down'等。默认为 'round_half_up'。",
        },
        "returns": "包含高精度计算结果的字典",
        "examples": [
            "precision_calculator(numbers=[1.123, 2.987], operation='add', precision_digits=15)",
            "precision_calculator(numbers=[2], operation='sqrt', precision_digits=20)",
        ],
    },
    # 数值属性分析工具
    "number_properties": {
        "name": "number_properties",
        "description": "数值属性分析工具，分析数字的各种数学属性",
        "args": {
            "number": "(float) 要分析的数字。必需。",
            "analysis_type": "(string, 可选) 分析类型。支持：'comprehensive'(综合), 'prime'(素数), 'factor'(因数), 'digital'(数字特征), 'classification'(分类)。默认为 'comprehensive'。",
        },
        "returns": "包含数字属性分析结果的字典",
        "examples": [
            "number_properties(number=17, analysis_type='comprehensive')",
            "number_properties(number=100, analysis_type='factor')",
        ],
    },
    # 矩阵计算工具
    "matrix_calculator": {
        "name": "matrix_calculator",
        "description": "矩阵和线性代数计算工具，支持基本运算和高级分析",
        "args": {
            "operation": "(string) 矩阵操作类型。必需。支持：'basic', 'decomposition', 'eigenvalues', 'svd', 'properties', 'power', 'exponential', 'solve'。 其中 operation='basic' 时可通过 method 指定 'add', 'subtract', 'multiply', 'transpose', 'determinant', 'inverse' 等；operation='decomposition' 时 method 支持 'qr', 'lu'；operation='properties' 时 method/property_type 支持 'rank', 'trace', 'condition_number', 'norm'。",
            "matrix_a": "(list[list[float]]) 第一个矩阵（二维数组）。必需。",
            "matrix_b": "(list[list[float]], 可选) 第二个矩阵。用于双矩阵运算，如加法、乘法。",
            "method": "(string, 可选) 计算方法。例如用于分解的 'LU', 'QR', 'SVD'。",
            "power": "(int, 可选) 矩阵幂次。用于 'power' 操作。",
            "property_type": "(string, 可选) 矩阵属性类型。用于 'properties' 操作，如 'condition_number', 'norm'。",
        },
        "returns": "包含矩阵计算结果的字典",
        "examples": [
            "matrix_calculator(operation='add', matrix_a=[[1,2],[3,4]], matrix_b=[[5,6],[7,8]])",
            "matrix_calculator(operation='determinant', matrix_a=[[1,2],[3,4]])",
        ],
    },
    # 统计分析工具
    "statistics_analyzer": {
        "name": "statistics_analyzer",
        "description": "统计分析工具，支持描述性统计、假设检验、相关分析、分布分析等",
        "args": {
            "data1": "(list[float]) 第一组样本数据。必需。",
            "analysis_type": "(string) 主分析类型。必需。支持：'descriptive'(描述性统计), 'tests'(检验), 'distribution'(分布分析), 'confidence_interval'(置信区间)。",
            "data2": "(list[float], 可选) 第二组样本数据。用于需要两组数据的分析，例如双样本t检验或相关性分析。",
            "test_type": "(string, 可选) 次级分析类型。当 analysis_type='tests' 时，支持 'normality'(正态性检验), 'hypothesis'(假设检验), 'correlation'(相关性检验)。当 analysis_type='distribution' 时，支持 'fitting'(分布拟合), 'percentiles'(百分位数), 'outliers'(异常值检测)。",
            "hypothesis_test_type": "(string, 可选) 具体的假设检验类型。当 test_type='hypothesis' 时使用，例如 'one_sample_t', 'two_sample_t', 'paired_t', 'anova', 'chi_square'。",
            "confidence": "(float, 可选) 置信水平。用于 'confidence_interval' 或假设检验。范围 0-1，默认为 0.95。",
            "distribution_type": "(string, 可选) 具体的分布类型。用于分布拟合 (test_type='fitting')，如 'normal', 'gamma', 'beta' 等。如果提供，则只拟合此分布；否则将尝试所有支持的分布。",
        },
        "returns": "包含统计分析结果的字典",
        "examples": [
            "statistics_analyzer(data1=[1,2,3,4,5], analysis_type='descriptive')",
            "statistics_analyzer(data1=[10,12,13,15,16], analysis_type='distribution', test_type='fitting', distribution_type='normal')",
            "statistics_analyzer(data1=[1,2,3,4,5,100], analysis_type='distribution', test_type='outliers')",
            "statistics_analyzer(data1=[1,2,3,4,5], analysis_type='tests', test_type='normality')",
        ],
    },
    # 微积分计算工具
    "calculus_engine": {
        "name": "calculus_engine",
        "description": "微积分计算工具，支持求导、积分、极限、级数等运算",
        "args": {
            "expression": "(string) 数学表达式（字符串形式）。必需。",
            "operation": "(string) 微积分运算类型。必需。支持：'derivative', 'integral', 'limit', 'series', 'taylor', 'solve'。",
            "variable": "(string, 可选) 变量名。默认为'x'。",
            "variables": "(list[str], 可选) 多变量列表。用于偏导数等多变量运算。",
            "limits": "(list[float], 可选) 积分上下限列表。格式为[下限, 上限]。用于定积分。",
            "point": "(float, 可选) 单个计算点。用于求导数值、极限点等。",
            "points": "(list[float], 可选) 多个计算点列表。用于批量计算导数值等。",
            "order": "(int, 可选) 阶数。用于高阶导数或级数项数。默认为1。",
            "method": "(string, 可选) 计算方法。支持'quad'（数值积分）等。默认为'quad'。",
            "mode": "(string, 可选) 计算模式。支持'symbolic'（符号计算）, 'numeric'（数值计算）。默认为'symbolic'。",
        },
        "returns": "包含微积分计算结果的字典",
        "examples": [
            "calculus_engine(expression='x**2 + 3*x + 1', operation='derivative')",
            "calculus_engine(expression='sin(x)', operation='integral', limits=[0, 3.14159])",
            "calculus_engine(expression='1/(1+x**2)', operation='integral', limits=[-1, 1], method='quad')",
            "calculus_engine(expression='x**2', operation='derivative', points=[1, 2, 3])",
        ],
    },
    # 优化算法工具
    "optimization_suite": {
        "name": "optimization_suite",
        "description": "数值优化算法工具，支持函数优化、方程求解、线性规划等",
        "args": {
            "objective_function": "(string, 可选) 目标函数表达式。对于 'minimize'/'maximize'/'root_finding' 操作必需；当 operation='linear_programming' 时可省略。",
            "variables": "(list[str], 可选) 变量名列表。对于符号/数值优化需要；若使用纯线性规划(lp_c/lp_A_*)则可省略。",
            "operation": "(string, 可选) 优化操作类型。支持：'minimize', 'maximize', 'root_finding', 'linear_programming'。默认为'minimize'。",
            "method": "(string, 可选) 优化方法。例如'BFGS', 'Nelder-Mead'。默认为'auto'。",
            "initial_guess": "(list[float], 可选) 初始猜测值列表。",
            "bounds": "(list[tuple[float, float]], 可选) 变量边界列表。格式为[(下界,上界), ...]。",
            "constraints": "(list[dict], 可选) 约束条件列表。每个约束为{'type': 'eq'/'ineq', 'fun': '...'} 格式。",
            "equation": "(string, 可选) 方程表达式。用于'root_finding'操作。",
            "root_method": "(string, 可选) 方程求解方法。默认为'fsolve'。",
            "lp_c": "(list[float], 可选) 线性规划目标函数系数。用于'linear_programming'操作。",
            "lp_A_ub": "(list[list[float]], 可选) 线性规划不等式约束矩阵。用于'linear_programming'操作。",
            "lp_b_ub": "(list[float], 可选) 线性规划不等式约束右侧向量。用于'linear_programming'操作。",
            "lp_A_eq": "(list[list[float]], 可选) 线性规划等式约束矩阵。用于'linear_programming'操作。",
            "lp_b_eq": "(list[float], 可选) 线性规划等式约束右侧向量。用于'linear_programming'操作。",
        },
        "returns": "包含优化结果的字典",
        "examples": [
            "# 无约束函数最小化",
            "optimization_suite(objective_function='(x-1)**2 + (y-2)**2', variables=['x', 'y'], operation='minimize')",
            "# 求方程根",
            "optimization_suite(objective_function='x**2 - 4', variables=['x'], operation='root_finding')",
            "# 线性规划（仅提供lp_*参数，无需objective_function/variables）",
            "optimization_suite(operation='linear_programming', lp_c=[1, 2], lp_A_ub=[[1, 1]], lp_b_ub=[3])",
        ],
    },
    # 回归分析工具
    "regression_modeler": {
        "name": "regression_modeler",
        "description": "回归分析和机器学习建模工具，支持多种回归算法和预测功能",
        "args": {
            "operation": "(string, 可选) 回归操作类型。支持：'fit'(拟合), 'predict'(预测), 'residual_analysis'(残差分析), 'model_comparison'(模型比较)。默认为'fit'。",
            "x_data": "(list[list[float]], 可选) 自变量数据。二维数组或列表。对于fit操作为训练数据，对于predict操作为待预测数据。",
            "y_data": "(list[float], 可选) 因变量数据。一维数组或列表。用于fit操作的训练标签。",
            "model_type": "(string, 可选) 回归模型类型。支持：'linear', 'polynomial', 'ridge', 'lasso', 'elastic_net', 'logistic'。默认为'linear'。",
            "degree": "(int, 可选) 多项式回归次数。默认为2。",
            "alpha": "(float, 可选) 正则化参数。默认为1.0。",
            "l1_ratio": "(float, 可选) 弹性网络L1比例。范围0-1，默认为0.5。",
            "cv_folds": "(int, 可选) 交叉验证折数。默认为5。",
            "test_size": "(float, 可选) 测试集比例。范围0-1，默认为0.2。",
            "training_x": "(list[list[float]], 可选) 训练自变量数据。用于predict操作时提供训练数据。",
            "training_y": "(list[float], 可选) 训练因变量数据。用于predict操作时提供训练标签。",
            "model_params": "(dict, 可选) 预训练模型参数。用于predict操作，包含intercept和slopes/coefficients。",
            "y_true": "(list[float], 可选) 真实值。用于residual_analysis操作。",
            "y_pred": "(list[float], 可选) 预测值。用于residual_analysis操作。",
            "models_results": "(list[dict], 可选) 模型结果列表。用于model_comparison操作。",
        },
        "returns": "包含回归分析结果的字典",
        "examples": [
            "regression_modeler(operation='fit', x_data=[[1], [2], [3]], y_data=[2, 4, 6], model_type='linear')",
            "regression_modeler(operation='predict', x_data=[[12]], training_x=[[1], [2], [3]], training_y=[2, 4, 6], model_type='linear')",
            "regression_modeler(operation='predict', x_data=[[12]], model_type='linear', model_params={'intercept': 0, 'slopes': [2]})",
            "regression_modeler(operation='fit', x_data=[[1], [2], [3]], y_data=[2, 4, 6], model_type='polynomial', degree=3)",
        ],
    },
    # 表达式求值工具
    "expression_evaluator": {
        "name": "expression_evaluator",
        "description": "数学表达式求值和符号计算工具",
        "args": {
            "expression": "(string) 数学表达式。必需。",
            "variables": "(dict, 可选) 变量值字典。格式为 {'x': 1, 'y': 2}。",
            "mode": "(string, 可选) 计算模式。支持：'evaluate', 'simplify', 'expand', 'factor'。默认为 'evaluate'。",
            "output_format": "(string, 可选) 输出格式。支持：'decimal', 'fraction', 'scientific', 'latex'。默认为 'decimal'。",
        },
        "returns": "包含表达式计算结果的字典",
        "examples": [
            "expression_evaluator(expression='2*x + 3*y', variables={'x': 5, 'y': 7})",
            "expression_evaluator(expression='x**2 + 2*x + 1', mode='factor')",
        ],
    },
    # 数据可视化工具
    "create_and_save_chart": {
        "name": "create_and_save_chart",
        "description": "数据可视化和图表创建工具，支持多种统计图表类型",
        "args": {
            "chart_type": "(string) 图表类型。必需。支持：'bar', 'pie', 'line', 'scatter', 'histogram', 'box', 'heatmap', 'correlation_matrix', 'multi_series_line'。",
            "data": "(list[float], 可选) 单系列数据。用于柱状图、饼图、直方图、箱线图。",
            "x_data": "(list[float], 可选) X轴数据。用于线图、散点图、多系列线图。",
            "y_data": "(list[float], 可选) Y轴数据。用于线图、散点图。",
            "y_data_series": "(list[list[float]], 可选) 多系列Y轴数据。用于多系列线图。",
            "series_labels": "(list[str], 可选) 多系列图的标签。",
            "matrix_data": "(list[list[float]], 可选) 矩阵数据。用于热力图、多组箱线图、相关性矩阵。",
            "labels": "(list[str], 可选) 数据标签。用于柱状图、饼图等。",
            "title": "(string, 可选) 图表标题。默认为'统计图表'。",
            "xlabel": "(string, 可选) X轴标签。默认为'X轴'。",
            "ylabel": "(string, 可选) Y轴标签。默认为'Y轴'。",
            "filename": "(string, 可选) 保存文件名（不含路径和扩展名）。如不提供，将自动生成。",
            "format": "(string, 可选) 图像格式。支持'png', 'jpg', 'svg'等。默认为'png'。",
            "colors": "(list[str], 可选) 颜色列表。用于自定义图表颜色。",
            "figsize": "(tuple[float, float], 可选) 图片大小。格式为(宽度, 高度)。",
            "dpi": "(int, 可选) 图片分辨率。默认为300。",
            "style": "(string, 可选) 图表样式。默认为'whitegrid'。",
            "show_values": "(bool, 可选) 是否显示数值标签。用于柱状图。默认为False。",
            "horizontal": "(bool, 可选) 是否为水平柱状图。用于柱状图。默认为False。",
            "trend_line": "(bool, 可选) 是否显示趋势线。用于散点图。默认为False。",
            "trend_line_color": "(string, 可选) 趋势线颜色。用于散点图。",
            "trend_line_equation": "(string, 可选) 趋势线方程文本。用于散点图。",
            "bins": "(int, 可选) 直方图分箱数量。默认为30。",
            "annotate": "(bool, 可选) 是否显示数值标注。用于热力图。默认为True。",
            "colormap": "(string, 可选) 颜色映射。用于热力图。默认为'viridis'。",
            "color": "(string, 可选) 单一颜色。用于线图、散点图等。",
            "line_width": "(float, 可选) 线条宽度。用于线图。默认为2.0。",
            "line_style": "(string, 可选) 线条样式。用于线图。默认为'-'。",
            "marker": "(string, 可选) 标记样式。用于线图、散点图。默认为'o'。",
            "marker_size": "(int, 可选) 标记大小。用于线图、散点图。默认为6。",
            "alpha": "(float, 可选) 透明度。范围0-1。默认为0.7。",
            "grid": "(bool, 可选) 是否显示网格。默认为True。",
        },
        "returns": "包含图表创建结果的字典，包含文件保存路径、操作状态、数据摘要等信息",
        "examples": [
            "create_and_save_chart(chart_type='line', x_data=[1,2,3,4], y_data=[1,4,2,3], title='Line Plot')",
            "create_and_save_chart(chart_type='histogram', data=[1,2,2,3,3,3,4,4,5], filename='histogram_plot')",
            "create_and_save_chart(chart_type='bar', data=[10,24,35,20], labels=['A','B','C','D'], filename='bar_chart', format='svg')",
            "create_and_save_chart(chart_type='scatter', x_data=[1,2,3,4,5], y_data=[2,4,1,3,5], trend_line=True)",
            "create_and_save_chart(chart_type='multi_series_line', x_data=[1,2,3,4], y_data_series=[[1,4,2,3], [2,3,4,1]], series_labels=['Series 1', 'Series 2'])",
        ],
    },
    # 函数绘图工具
    "plot_function_curve": {
        "name": "plot_function_curve",
        "description": "数学函数曲线绘制工具，支持函数图像可视化和导数分析",
        "args": {
            "function_expression": "(string) 函数表达式。必需。支持常见数学函数如sin, cos, tan, exp, log, sqrt等。",
            "variable": "(string, 可选) 自变量名。默认为'x'。",
            "x_range": "(tuple[float, float], 可选) X轴范围。格式为(最小值, 最大值)。默认为(-10, 10)。",
            "num_points": "(int, 可选) 绘图点数。默认为1000。",
            "title": "(string, 可选) 图表标题。默认为'函数图像'。",
            "xlabel": "(string, 可选) X轴标签。默认为'X轴'。",
            "ylabel": "(string, 可选) Y轴标签。默认为'Y轴'。",
            "filename": "(string, 可选) 保存文件名（不含路径和扩展名）。如不提供则自动生成时间戳文件名。",
            "format": "(string, 可选) 图像格式。支持'png', 'jpg', 'svg'等。默认为'png'。",
            "figsize": "(tuple[float, float], 可选) 图片大小。格式为(宽度, 高度)。默认为(10, 6)。",
            "dpi": "(int, 可选) 图片分辨率。默认为300。",
            "color": "(string, 可选) 函数曲线颜色。默认为'blue'。",
            "line_width": "(float, 可选) 线条宽度。默认为2.0。",
            "grid": "(bool, 可选) 是否显示网格。默认为True。",
            "grid_alpha": "(float, 可选) 网格透明度。范围0-1。默认为0.3。",
            "derivative_order": "(int, 可选) 导数阶数。提供此参数时会同时绘制函数的n阶导数曲线。",
            "show_critical_points": "(bool, 可选) 是否显示临界点（极值点）。默认为False。仅在提供derivative_order时有效。",
            "show_equation": "(bool, 可选) 是否在图上显示函数方程。默认为True。",
            "equation_position": "(string, 可选) 方程显示位置。支持'upper right', 'upper left', 'lower right', 'lower left'。默认为'upper right'。",
            "alpha": "(float, 可选) 线条透明度。范围0-1。默认为1.0。",
            "line_style": "(string, 可选) 线条样式。默认为'-'。",
            "marker": "(string, 可选) 数据点标记。默认为''（无标记）。",
            "marker_size": "(int, 可选) 标记大小。默认为6。",
        },
        "returns": "包含函数绘图结果的字典，包含文件保存路径、操作状态、函数信息等",
        "examples": [
            "plot_function_curve(function_expression='x**2 + 2*x + 1')",
            "plot_function_curve(function_expression='sin(x)', x_range=(-6.28, 6.28), filename='sine_wave')",
            "plot_function_curve(function_expression='x**3 - 3*x', derivative_order=1, show_critical_points=True, filename='cubic_with_critical_points')",
            "plot_function_curve(function_expression='exp(-x**2)', x_range=(-3, 3), color='red', show_equation=True)",
        ],
    },
    # 资源清理工具
    "cleanup_resources": {
        "name": "cleanup_resources",
        "description": "删除 OUTPUT_PATH(或默认临时目录) 中生成的文件，并执行基本资源清理, 仅在用户明确指出删除临时文件或输出文件的时候调用。",
        "args": {},
        "returns": "包含清理结果的字典，报告清理的文件数量和状态",
        "examples": ["cleanup_resources()"],
    },
}
